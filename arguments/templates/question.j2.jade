- extends "layout.j2.jade"
- from "question_macros.j2.jade" import question_box
- from "argument_macros.j2.jade" import argument_box

- block title
  title= question.title

- block content
  #content_wide
    .thin
      .question_tabs
        .tab.tab_active
          a(href="/" + question.url)= _("discussion")
        .tab
          a(href="/" + question.url)= _("follow") if True else _("unfollow")

      = question_box(question, no_margin=True, voting=True, details=True, user=current_user)

    .arguments
      a(name="arguments")

      .arguments_pro
        for argument in question.pro_arguments
          .argument_wrapper
            = argument_box(argument, current_user, show_ca_button=True)

        a(href=url_for("new_argument", question_url=question.url, argument_type="pro")) 
          .button_argument.button_new_argument_pro 
            span= _("add_pro_argument")

      .arguments_con
        for argument in question.contra_arguments
          .argument_wrapper
            = argument_box(argument, current_user, show_ca_button=True)

        a(href=url_for("new_argument", question_url=question.url, argument_type="con")) 
          .button_argument.button_new_argument_con 
            span= _("add_con_argument")
      .clear
    .clear


- block script
  script.
    $(function() {
      $("[data-action='argument_vote_up']").click(function() {
        var revoke = $(this).data("revoke");
        var argument_id = $(this).data("argument-id");
        Sijax.request("argument_vote", [argument_id, revoke ? 0 : 1]);
      });

      $("[data-action='argument_vote_dn']").click(function() {
        var revoke = $(this).data("revoke");
        var argument_id = $(this).data("argument-id");
        Sijax.request("argument_vote", [argument_id, revoke ? 0 : -1]);
      });

      $("[data-action='question_vote_up']").click(function() {
        var revoke = $(this).data("revoke");
        var question_id = $(this).data("question-id");
        Sijax.request("question_vote", [question_id, revoke ? 0 : 1]);
      });
    });


    change_question_vote_actions = function(question_id, old_value, value) {
      
      vote_up = $(`[data-action='question_vote_up'][data-question-id='${question_id}']`);

      if (old_value == 0 && value == 1) {
        vote_up.removeClass("vote_up_inactive");
        vote_up.data("revoke", true);
      }
      else if (old_value == 1 && value == 0) {
        vote_up.addClass("vote_up_inactive");
        vote_up.data("revoke", false);
      }
    }


    change_argument_vote_actions = function(argument_id, old_value, value) {

      vote_up = $(`[data-action='argument_vote_up'][data-argument-id='${argument_id}']`);
      vote_dn = $(`[data-action='argument_vote_dn'][data-argument-id='${argument_id}']`);

      if (old_value == 0 && value == 1) {
        vote_up.removeClass("vote_up_inactive");
        vote_up.data("revoke", true);
      }
      else if (old_value == 0 && value == -1) {
        vote_dn.removeClass("vote_dn_inactive");
        vote_dn.data("revoke", true);
      }
      else if (old_value == 1 && value == 0) {
        vote_up.addClass("vote_up_inactive");
        vote_up.data("revoke", false);
      }
      else if (old_value == -1 && value == 0) {
        vote_dn.addClass("vote_dn_inactive");
        vote_dn.data("revoke", false);
      }
      else if (old_value == -1 && value == 1) {
        vote_dn.addClass("vote_dn_inactive");
        vote_dn.data("revoke", false);
        vote_up.removeClass("vote_up_inactive");
        vote_up.data("revoke", true);
      }
      else if (old_value == 1 && value == -1) {
        vote_up.addClass("vote_up_inactive");
        vote_up.data("revoke", false);
        vote_dn.removeClass("vote_dn_inactive");
        vote_dn.data("revoke", true);
      }
    };

// generated from jade
//- vim: set filetype=jade sw=2 ts=2 sts=2 expandab:
