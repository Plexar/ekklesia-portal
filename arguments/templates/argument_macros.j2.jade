- macro counter_arguments_button(argument, full=False)
  num_counter_arguments = argument.counter_arguments.count()

  if full
    box_cls = "counter_argument_box_full counter_argument_box_full_" + argument.argument_type
  else
    box_cls = "counter_argument_box counter_argument_box_" + argument.argument_type

  a(href=url_for("counter_arguments", question_url=argument.question.url, argument_url=argument.url))
    div(class=box_cls)
      .count= num_counter_arguments
      .count_text= ngettext("counter_argument", "counter_arguments", num_counter_arguments)
      .plus_sign

      if not full
        .line

- macro argument_stats(argument, user)

  vote = argument.user_vote(user) if user.is_authenticated else None
  upvoted = vote.is_upvote if vote else False
  downvoted = vote.is_downvote if vote else False

  .stats.argument_stats
    .points.argument_points= argument.score
    .points_text.argument_points_text= ngettext("point", "points", argument.score)
    form
      .vote_up.argument_vote_up(class=("vote_up_inactive" if not upvoted else ""))
      .vote_dn.argument_vote_dn(class=("vote_dn_inactive" if not downvoted else ""))


- macro argument_footer(argument)
    .author.question_author=_("authored_at_by", dt=argument.created_at|datetimeformat, author_name=argument.author.display_name)

    div(class="argument_{{ argument.argument_type }}_bar")


- macro argument_box(argument, user, extended=False, show_ca_button=False, no_counter=False)
  argument_url = url_for("argument", question_url=argument.question.url, argument_url=argument.url)

  if extended
    abstract_cls = "argument_abstract_extended"
    argument_cls = "argument_extended"
  else
    abstract_cls = "argument_abstract"
    argument_cls = "argument argument_" + argument.argument_type
    if no_counter
      argument_cls = argument_cls + "_no_counter"

  if show_ca_button
    = counter_arguments_button(argument)

  div(class=argument_cls)
    = argument_stats(argument, user)

    .argument_headline
      a(href=argument_url)= argument.title

    div(class=abstract_cls)= argument.abstract
      if argument.details
        a.read_more(href=argument_url) &nbsp;>>

    = argument_footer(argument)


- macro counter_argument_box(argument, user)
  = argument_box(argument, user, no_counter=True)


- macro argument_box_full(argument, user)
  argument_url = url_for("argument", question_url=argument.question.url, argument_url=argument.url)

  .argument_full
    = argument_stats(argument, user)

    .argument_title
      a(href=argument_url)= argument.title

    .argument_abstract_extended.argument_abstract_cursive= argument.abstract

    .argument_details_extended= (argument.details or "")|markdown

    = argument_footer(argument)

  .counter_argument_box_full_line
  = counter_arguments_button(argument, full=True)


// generated from jade
//- vim: set filetype=jade sw=2 ts=2 sts=2 expandtab:

